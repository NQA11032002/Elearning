{"ast":null,"code":"import SidebarteacherScreen from './SidebarteacherScreen.vue';\nimport axios from \"axios\";\nexport default {\n  components: {\n    SidebarteacherScreen\n  },\n  data() {\n    return {\n      selectedFile: null,\n      // Tên mặc định khi chưa có tệp nào được chọn\n      lesson: {\n        name: \"\",\n        thematicID: 0,\n        urlVideo: \"\",\n        duration: \"\"\n      }\n    };\n  },\n  methods: {\n    async uploadLesson() {\n      if (this.selectedFile != null) {\n        await axios.post(\"http://localhost:8087/api/upload-course?extension=mp4\", this.lesson).then(data => {\n          if (data.status == 200) {\n            const blob = new Blob([this.selectedFile], {\n              type: 'application/octet-stream'\n            });\n            let urlAWS = data.data;\n            let binaryData = this.selectedFile;\n            axios.put(urlAWS, blob, {\n              headers: {\n                'Content-Type': 'application/octet-stream' // Set the content type to binary\n              }\n            });\n          }\n        });\n      }\n    },\n    handleFileChange(event) {\n      const inputFile = event.target;\n      if (inputFile.files.length > 0) {\n        // Lấy tên của tệp đầu tiên nếu có\n        this.selectedFile = event.target.files[0].name;\n      } else {\n        this.selectedFile = \"Chưa chọn tệp\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["SidebarteacherScreen","axios","components","data","selectedFile","lesson","name","thematicID","urlVideo","duration","methods","uploadLesson","post","then","status","blob","Blob","type","urlAWS","binaryData","put","headers","handleFileChange","event","inputFile","target","files","length"],"sources":["F:\\VueJS\\Elearning-Frontend\\Elearning\\src\\components\\client\\Professional\\CourseVideoScreen.vue"],"sourcesContent":["<template>\n    <div class=\"w-2/3 m-auto max-sm:w-full max-sm:px-5 sm:px-3 lg:px-0 mt-14\">\n        <div class=\"w-full flex my-5 max-sm:flex-col\">\n            <sidebarteacher-screen></sidebarteacher-screen>\n            <div class=\"ml-6 w-4/5 max-sm:mt-4 bg-white max-sm:ml-0 shadow-md \">\n                <div class=\"p-4\">\n                    <p class=\"text-3xl font-semibold flex justify-center text-blue-900\">Thông tin chuyên đề</p>\n                </div>\n                <div class=\"flex justify-between max-sm:flex-col\">\n                    <form @submit.prevent=\"uploadLesson\" class=\"w-full flex flex-col justify-center max-sm:w-full max-sm:p-2\" style=\"margin-left: 50%; transform: translateX(-50%);\">\n                        <!-- <span class=\"py-2 font-semibold\">Mã khóa học:</span>\n                        <input class=\"outline-none border px-2 border-blue-900 w-full h-8 rounded max-sm:w-full\" type=\"text\" placeholder=\"Mã khóa học:\">\n    \n                        <span class=\"py-2 font-semibold\">Mã chuyên đề:</span>\n                        <input class=\"outline-none border px-2 border-blue-900 w-full h-8 rounded max-sm:w-full\" type=\"text\" placeholder=\"Mã khóa học:\">\n         -->\n                        <span class=\"py-2 font-semibold\">Tên bài giảng: (Số lượng bài giảng được phép <span class=\"text-red-600\">2</span> )</span>\n                        <input v-model=\"lesson.name\" class=\"outline-none border px-2 border-blue-900 w-full h-8 rounded max-sm:w-full\" type=\"text\" placeholder=\"Tên chuyên đề:\">\n                        \n    \n                        <span class=\"py-2 font-semibold\">Chọn video giảng:</span>\n                        <div class=\"relative h-8 border border-blue-900 w-full rounded max-sm:w-full\">\n                            <label class=\"absolute flex right-0 items-center pr-1 h-full w-full\" for=\"filevideocourse\">\n                                <p class=\"text-left w-full pl-2 text-gray-400\">{{ selectedFile }}</p>\n                                <i class=\"fa-regular fa-folder-open cursor-pointer text-blue-900\"></i>\n                                <input @change=\"handleFileChange\" class=\"outline-none border px-2 border-blue-900 w-full h-8 rounded max-sm:w-full hidden\" type=\"file\" id=\"filevideocourse\" placeholder=\"Bài giảng\">\n                            </label>\n                        </div>\n                        \n                        <div class=\"flex justify-end w-full my-4 max-sm:w-full\">\n                            <button class=\"bg-gray-400  text-white p-2 w-1/5 mr-4 rounded text-sm max-sm:mr-2\">Hủy</button>\n                            <button class=\"bg-blue-900 text-white p-2 w-2/5 rounded text-sm max-sm:mr-0\">Lưu bài giảng</button>\n                        </div>\n                    </form>\n                </div>\n                \n            </div>\n            \n        </div>\n    </div>\n    \n</template>\n<script>\nimport SidebarteacherScreen from './SidebarteacherScreen.vue';\nimport axios from \"axios\";\n\n\nexport default {\n    components: {\n        SidebarteacherScreen,\n    },\n    data() {\n      return {\n        selectedFile: null, // Tên mặc định khi chưa có tệp nào được chọn\n        lesson:{\n          name : \"\",\n          thematicID : 0,\n          urlVideo : \"\",\n          duration : \"\"\n        }\n      };\n    },\n    methods: {\n\n      async uploadLesson(){\n\n        if(this.selectedFile != null)\n        {\n          await axios.post(\"http://localhost:8087/api/upload-course?extension=mp4\", this.lesson).then((data) => {\n          if(data.status == 200)\n          {\n            const blob = new Blob([this.selectedFile], { type: 'application/octet-stream' });\n            let urlAWS = data.data;\n            let binaryData = this.selectedFile;\n\n            axios.put(urlAWS, blob,  {\n          headers: {\n            'Content-Type': 'application/octet-stream', // Set the content type to binary\n          },\n        });\n          }\n        })\n        }\n      },\n\n      handleFileChange(event) {\n        const inputFile = event.target;\n        if (inputFile.files.length > 0) {\n          // Lấy tên của tệp đầu tiên nếu có\n          this.selectedFile = event.target.files[0].name;\n        } else {\n          this.selectedFile = \"Chưa chọn tệp\";\n        }\n      },\n  },\n};\n\n</script>\n"],"mappings":"AA2CA,OAAOA,oBAAmB,MAAO,4BAA4B;AAC7D,OAAOC,KAAI,MAAO,OAAO;AAGzB,eAAe;EACXC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAI;MAAE;MACpBC,MAAM,EAAC;QACLC,IAAG,EAAI,EAAE;QACTC,UAAS,EAAI,CAAC;QACdC,QAAO,EAAI,EAAE;QACbC,QAAO,EAAI;MACb;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IAEP,MAAMC,YAAYA,CAAA,EAAE;MAElB,IAAG,IAAI,CAACP,YAAW,IAAK,IAAI,EAC5B;QACE,MAAMH,KAAK,CAACW,IAAI,CAAC,uDAAuD,EAAE,IAAI,CAACP,MAAM,CAAC,CAACQ,IAAI,CAAEV,IAAI,IAAK;UACtG,IAAGA,IAAI,CAACW,MAAK,IAAK,GAAG,EACrB;YACE,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC,IAAI,CAACZ,YAAY,CAAC,EAAE;cAAEa,IAAI,EAAE;YAA2B,CAAC,CAAC;YAChF,IAAIC,MAAK,GAAIf,IAAI,CAACA,IAAI;YACtB,IAAIgB,UAAS,GAAI,IAAI,CAACf,YAAY;YAElCH,KAAK,CAACmB,GAAG,CAACF,MAAM,EAAEH,IAAI,EAAG;cAC3BM,OAAO,EAAE;gBACP,cAAc,EAAE,0BAA0B,CAAE;cAC9C;YACF,CAAC,CAAC;UACA;QACF,CAAC;MACD;IACF,CAAC;IAEDC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,SAAQ,GAAID,KAAK,CAACE,MAAM;MAC9B,IAAID,SAAS,CAACE,KAAK,CAACC,MAAK,GAAI,CAAC,EAAE;QAC9B;QACA,IAAI,CAACvB,YAAW,GAAImB,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACpB,IAAI;MAChD,OAAO;QACL,IAAI,CAACF,YAAW,GAAI,eAAe;MACrC;IACF;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}