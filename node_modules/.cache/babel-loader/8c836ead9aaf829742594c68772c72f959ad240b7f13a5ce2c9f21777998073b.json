{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userName: '',\n      fullName: '',\n      phone: '',\n      password: '',\n      repeatPassword: ''\n    };\n  },\n  methods: {\n    async register() {\n      // Kiểm tra xem mật khẩu có trùng khớp không\n      if (this.password !== this.repeatPassword) {\n        alert('Mật khẩu nhập lại không chính xác');\n        return;\n      }\n      try {\n        // Gửi yêu cầu POST đến API Spring Boot để đăng ký\n        const response = await axios.post('http://localhost:8087/auth/register', {\n          userName: this.userName,\n          password: this.password,\n          fullName: this.fullName,\n          phone: this.phone\n        });\n\n        // Xử lý dữ liệu nhận được từ API (response.data) nếu cần\n        console.log('Đăng ký tài khoản thành công', response.data);\n\n        // Hiển thị thông báo và chuyển hướng sau khi đăng ký thành công\n        alert('Đăng ký tài khoản thành công');\n        this.$router.push('/login'); // Chuyển hướng đến trang login\n      } catch (error) {\n        // Xử lý lỗi từ API (error.response.data) nếu cần\n        console.error('Registration failed', error.response.data);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userName","fullName","phone","password","repeatPassword","methods","register","alert","response","post","console","log","$router","push","error"],"sources":["F:\\VueJS\\Elearning-Frontend\\Elearning\\src\\components\\client\\RegisterScreen.vue"],"sourcesContent":["<template>\r\n    <body class=\"LoginForm\">\r\n        <div class=\"LoginForm_container\" id=\"container\">\r\n            <div class=\"form-container log-in-container\">\r\n                <form @submit.prevent=\"register\">\r\n                    <h1>Create Account</h1>\r\n                    <span>Create your new account</span>\r\n                    <input v-model=\"userName\" type=\"text\" placeholder=\"Username\" />\r\n                    <input v-model=\"fullName\" type=\"text\" placeholder=\"Full name\" />\r\n                    <input v-model=\"phone\" type=\"text\" placeholder=\"Phone number\" />\r\n                    <input v-model=\"password\" type=\"password\" placeholder=\"Password\" />\r\n                    <input v-model=\"repeatPassword\" type=\"password\" placeholder=\"Repeat your password\" />\r\n                    <p v-if=\"password !== repeatPassword\" class=\"text-red-500 font-semibold py-2 text-sm\">Mật khẩu nhập lại không chính xác!</p>\r\n                    <button type=\"submit\">Register</button>\r\n                </form>\r\n            </div>\r\n            <div class=\"overlay-container\">\r\n                <div class=\"overlay\">\r\n                    <div class=\"overlay-panel overlay-right\">\r\n                        <h1>Register Form</h1>\r\n                        <p>Have already an account? Login now!</p>\r\n                        <a href=\"/login\">\r\n                            <button>Login</button>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </body>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            userName: '',\r\n            fullName: '',\r\n            phone: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n        };\r\n    },\r\n    methods: {\r\n        async register() {\r\n            // Kiểm tra xem mật khẩu có trùng khớp không\r\n            if (this.password !== this.repeatPassword) {\r\n                alert('Mật khẩu nhập lại không chính xác');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                // Gửi yêu cầu POST đến API Spring Boot để đăng ký\r\n                const response = await axios.post('http://localhost:8087/auth/register', {\r\n                    userName: this.userName,\r\n                    password: this.password,\r\n                    fullName: this.fullName,\r\n                    phone: this.phone,\r\n                });\r\n\r\n                // Xử lý dữ liệu nhận được từ API (response.data) nếu cần\r\n                console.log('Đăng ký tài khoản thành công', response.data);\r\n\r\n                // Hiển thị thông báo và chuyển hướng sau khi đăng ký thành công\r\n                alert('Đăng ký tài khoản thành công');\r\n                this.$router.push('/login'); // Chuyển hướng đến trang login\r\n            } catch (error) {\r\n                // Xử lý lỗi từ API (error.response.data) nếu cần\r\n                console.error('Registration failed', error.response.data);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n"],"mappings":";AAgCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE;IACpB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,QAAQA,CAAA,EAAG;MACb;MACA,IAAI,IAAI,CAACH,QAAO,KAAM,IAAI,CAACC,cAAc,EAAE;QACvCG,KAAK,CAAC,mCAAmC,CAAC;QAC1C;MACJ;MAEA,IAAI;QACA;QACA,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,qCAAqC,EAAE;UACrET,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBG,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBF,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA;QAChB,CAAC,CAAC;;QAEF;QACAQ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,QAAQ,CAACT,IAAI,CAAC;;QAE1D;QACAQ,KAAK,CAAC,8BAA8B,CAAC;QACrC,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;MACjC,EAAE,OAAOC,KAAK,EAAE;QACZ;QACAJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACN,QAAQ,CAACT,IAAI,CAAC;MAC7D;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}