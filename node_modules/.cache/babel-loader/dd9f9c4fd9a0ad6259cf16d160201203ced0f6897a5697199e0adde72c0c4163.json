{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '../../../assets/js/axios.js';\nimport { findApiByName } from \"../../../assets/js/apiUtil.js\";\nimport { auth } from \"../../../assets/js/auth.js\";\nexport default {\n  mounted() {\n    const getCourse = async () => {\n      try {\n        //get url API\n        const apiObject = findApiByName(\"order\", \"findCourse\").url;\n\n        //get all course ordered\n        const res = await axios.get(apiObject + auth());\n        if (res.status == 200) {\n          if (res.data.data.length > 0) {\n            //get courseID from order\n            res.data.data.forEach(element => {\n              //get course by courseID from order \n              this.getCourseByID(element.courseID);\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCourse();\n  },\n  setup() {},\n  methods: {\n    //get course by id from arrayID\n    async getCourseByID(courseID) {\n      //get url API\n      const apiObject = findApiByName(\"course\", \"findCourseByID\").url;\n      const res = await axios.get(apiObject + courseID);\n      if (res.status == 200) {\n        this.courses.push(res.data.data);\n      }\n    },\n    async getUserByID(userID) {\n      try {\n        // Get API URL\n        const apiObject = findApiByName(\"customer\", \"findUser\").url;\n\n        // Make API request\n        const res = await axios.get(apiObject + userID);\n        if (res.status === 200) {\n          return res.data.data.fullName;\n        } else {\n          console.error('Error fetching user data. Status:', res.status);\n          return null;\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        return null;\n      }\n    }\n  },\n  components: {},\n  data() {\n    return {\n      expert: \"\",\n      arrayID: [],\n      courses: []\n    };\n  }\n};","map":{"version":3,"names":["axios","findApiByName","auth","mounted","getCourse","apiObject","url","res","get","status","data","length","forEach","element","getCourseByID","courseID","error","console","log","setup","methods","courses","push","getUserByID","userID","fullName","components","expert","arrayID"],"sources":["F:\\VueJS\\Elearning-Frontend\\Elearning\\src\\components\\client\\students\\MyCourseScreen.vue"],"sourcesContent":["<template>\n  <div class=\"w-3/4 mx-auto\">\n    <div class=\"py-10\">\n      <div class=\"border-b border-b-gray-200 pb-5\">\n        <h1 class=\"text-xl font-semibold justify-between flex\">Khóa học của tôi <p\n            class=\"text-gray-500 text-lg text-medium\">Số lượng: 5</p>\n        </h1>\n        <p class=\"text-sm text-gray-500 pt-3\">Bạn chưa hoàn thành khóa học nào.</p>\n      </div>\n\n      <div class=\"flex flex-wrap pt-5 gap-6 w-full\">\n        <a :href=\"'/course/' + course.id\" v-for=\" course in courses\" :key=\"course.id\"\n          class=\"flex flex-col gap-3 lg:w-course overflow-hidden hover:opacity-80 hover:shadow-lg rounded-lg transition-all\">\n          <div>\n            <img class=\"flex-shrink-0 h-44 w-full rounded-lg\" :src=\"course.courseImages.length > 0 ?\n              course.courseImages[0].urlImage : ''\" alt=\"\">\n          </div>\n          <div class=\"flex-1 p-3\">\n            <p class=\"font-medium text-sm truncate\">{{ course.title }}</p>\n            <p class=\"flex justify-between text-gray-500 text-sm pt-2\">{{ getUserByID(course.userID) }} <label>{{\n              course.createdAt\n            }}</label>\n            </p>\n          </div>\n        </a>\n\n        <a href=\"\"\n          class=\"flex flex-col gap-6 overflow-hidden max-sm:w-full w-52 max-sm:py-4 justify-center items-center rounded-lg transition-all hover:outline-slate-700 outline-2 outline-gray-300 outline-dashed\">\n          <i class=\"fa-solid fa-circle-plus text-2xl text-gray-400 \"></i>\n          <button class=\"border-slate-700 rounded-lg border py-2 w-32 text-sm text-gray-400\">Thêm khóa học</button>\n        </a>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from '../../../assets/js/axios.js';\nimport { findApiByName } from \"../../../assets/js/apiUtil.js\";\nimport { auth } from \"../../../assets/js/auth.js\";\n\nexport default {\n  mounted() {\n    const getCourse = async () => {\n      try {\n\n        //get url API\n        const apiObject = findApiByName(\"order\", \"findCourse\").url;\n\n        //get all course ordered\n        const res = await axios.get(apiObject + auth());\n\n        if (res.status == 200) {\n          if (res.data.data.length > 0) {\n            //get courseID from order\n            res.data.data.forEach(element => {\n\n              //get course by courseID from order \n              this.getCourseByID(element.courseID);\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getCourse();\n  },\n  setup() {\n\n  },\n  methods: {\n    //get course by id from arrayID\n    async getCourseByID(courseID) {\n      //get url API\n      const apiObject = findApiByName(\"course\", \"findCourseByID\").url;\n\n      const res = await axios.get(apiObject + courseID);\n\n      if (res.status == 200) {\n        this.courses.push(res.data.data)\n      }\n    },\n\n    async getUserByID(userID) {\n      try {\n        // Get API URL\n        const apiObject = findApiByName(\"customer\", \"findUser\").url;\n\n        // Make API request\n        const res = await axios.get(apiObject + userID);\n\n        if (res.status === 200) {\n          return res.data.data.fullName;\n        } else {\n          console.error('Error fetching user data. Status:', res.status);\n          return null;\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        return null;\n      }\n    }\n  },\n  components: {\n\n  },\n  data() {\n    return {\n      expert: \"\",\n      arrayID: [],\n      courses: []\n    };\n  }\n}\n\n</script>\n"],"mappings":";AAsCA,OAAOA,KAAI,MAAO,6BAA6B;AAC/C,SAASC,aAAY,QAAS,+BAA+B;AAC7D,SAASC,IAAG,QAAS,4BAA4B;AAEjD,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR,MAAMC,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QAEF;QACA,MAAMC,SAAQ,GAAIJ,aAAa,CAAC,OAAO,EAAE,YAAY,CAAC,CAACK,GAAG;;QAE1D;QACA,MAAMC,GAAE,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAACH,SAAQ,GAAIH,IAAI,CAAC,CAAC,CAAC;QAE/C,IAAIK,GAAG,CAACE,MAAK,IAAK,GAAG,EAAE;UACrB,IAAIF,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,MAAK,GAAI,CAAC,EAAE;YAC5B;YACAJ,GAAG,CAACG,IAAI,CAACA,IAAI,CAACE,OAAO,CAACC,OAAM,IAAK;cAE/B;cACA,IAAI,CAACC,aAAa,CAACD,OAAO,CAACE,QAAQ,CAAC;YACtC,CAAC,CAAC;UACJ;QACF;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF;IACAZ,SAAS,CAAC,CAAC;EACb,CAAC;EACDe,KAAKA,CAAA,EAAG,CAER,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMN,aAAaA,CAACC,QAAQ,EAAE;MAC5B;MACA,MAAMV,SAAQ,GAAIJ,aAAa,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAACK,GAAG;MAE/D,MAAMC,GAAE,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAACH,SAAQ,GAAIU,QAAQ,CAAC;MAEjD,IAAIR,GAAG,CAACE,MAAK,IAAK,GAAG,EAAE;QACrB,IAAI,CAACY,OAAO,CAACC,IAAI,CAACf,GAAG,CAACG,IAAI,CAACA,IAAI;MACjC;IACF,CAAC;IAED,MAAMa,WAAWA,CAACC,MAAM,EAAE;MACxB,IAAI;QACF;QACA,MAAMnB,SAAQ,GAAIJ,aAAa,CAAC,UAAU,EAAE,UAAU,CAAC,CAACK,GAAG;;QAE3D;QACA,MAAMC,GAAE,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAACH,SAAQ,GAAImB,MAAM,CAAC;QAE/C,IAAIjB,GAAG,CAACE,MAAK,KAAM,GAAG,EAAE;UACtB,OAAOF,GAAG,CAACG,IAAI,CAACA,IAAI,CAACe,QAAQ;QAC/B,OAAO;UACLR,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAET,GAAG,CAACE,MAAM,CAAC;UAC9D,OAAO,IAAI;QACb;MACF,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,OAAO,IAAI;MACb;IACF;EACF,CAAC;EACDU,UAAU,EAAE,CAEZ,CAAC;EACDhB,IAAIA,CAAA,EAAG;IACL,OAAO;MACLiB,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXP,OAAO,EAAE;IACX,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}