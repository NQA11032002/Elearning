{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"../../../assets/styles/login.scss\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { useRouter } from 'vue-router';\nimport { findApiByName } from '../../../assets/js/apiUtil.js';\nexport default {\n  setup() {\n    const router = useRouter();\n    if (Cookies.get('auth') !== undefined) {\n      router.push('/home');\n    }\n  },\n  data() {\n    return {\n      userName: '',\n      password: '',\n      isLogin: true\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        // Gửi yêu cầu POST đến API Spring Boot để đăng nhập\n        const apiObject = findApiByName(\"auth\", \"login\").url;\n        const response = await axios.post(apiObject, {\n          userName: this.userName,\n          password: this.password\n        }).then(response => {\n          console.log(changeTime(response.data.expirationTime));\n          if (response.status == 200 && Cookies.get('auth') === undefined) {\n            this.setCookie('auth', response.data.token, changeTime(response.data.expirationTime));\n          }\n        });\n        console.log(response);\n        this.isAuthenticated = true;\n        this.$router.push('/home');\n      } catch (error) {\n        this.isLogin = false;\n        console.error('Login failed', error.response.data);\n      }\n    },\n    setCookie(name, value, seconds) {\n      const date = new Date();\n      date.setTime(date.getTime() + seconds * 1000);\n      const expires = \"expires=\" + date.toUTCString();\n      document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";\n    },\n    deleteCookie(name) {\n      document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n    },\n    changeTime(timeString) {\n      // Tạo đối tượng Date từ chuỗi thời gian\n      const dateObject = new Date(timeString);\n      // Chuyển đổi thời gian thành giây\n      const timeInSeconds = dateObject.getTime() / 1000;\n      console.log(timeInSeconds);\n    }\n  }\n};","map":{"version":3,"names":["axios","Cookies","useRouter","findApiByName","setup","router","get","undefined","push","data","userName","password","isLogin","methods","login","apiObject","url","response","post","then","console","log","changeTime","expirationTime","status","setCookie","token","isAuthenticated","$router","error","name","value","seconds","date","Date","setTime","getTime","expires","toUTCString","document","cookie","deleteCookie","timeString","dateObject","timeInSeconds"],"sources":["C:\\Users\\hoqua\\Desktop\\Code\\PMChuyenNghiep\\Project-Elearning\\Elearning\\src\\components\\client\\auths\\LoginScreen.vue"],"sourcesContent":["<template>\n  <body class=\"LoginForm\">\n    <div class=\"LoginForm_container\" id=\"container\">\n      <div class=\"form-container log-in-container\">\n        <form @submit.prevent=\"login\">\n          <h1>Login</h1>\n          <div class=\"social-container\">\n            <a href=\"#\" class=\"social\"><i class=\"icon-fb fa-brands fa-facebook\"></i></a>\n            <a href=\"#\" class=\"social\"><i class=\"icon-git fa-brands fa-github\"></i></a>\n          </div>\n          <span>or use your account</span>\n          <input v-model=\"userName\" type=\"text\" placeholder=\"Username\" />\n          <input v-model=\"password\" type=\"password\" placeholder=\"Password\" />\n          <p v-if=\"isLogin === false\" class=\"text-red-500 font-semibold py-2 text-sm\">Tài khoản hoặc mật khẩu không chính xác</p>\n          <a href=\"#\">Forgot your password?</a>\n          <button type=\"submit\">Log In</button>\n        </form>\n      </div>\n      <div class=\"overlay-container\">\n        <div class=\"overlay\">\n          <div class=\"overlay-panel overlay-right\">\n            <h1>Login Form</h1>\n            <p>Welcome to our website! Enjoy your time</p>\n            <router-link to=\"/register\">\n              <button>No account yet? Register</button>\n            </router-link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </body>\n</template>\n\n<script>\nimport \"../../../assets/styles/login.scss\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { useRouter } from 'vue-router';\nimport { findApiByName } from '../../../assets/js/apiUtil.js';\n\n\nexport default {\n  setup() {\n    const router = useRouter();\n\n    if (Cookies.get('auth') !== undefined) {\n      router.push('/home');\n    }\n  },\n  data() {\n    return {\n      userName: '',\n      password: '',\n      isLogin: true,\n      \n    };\n  },\n\n  methods: {\n    async login() {\n      try {\n        // Gửi yêu cầu POST đến API Spring Boot để đăng nhập\n        const apiObject = findApiByName(\"auth\", \"login\").url;\n        const response = await axios.post(apiObject, {\n          userName: this.userName,\n          password: this.password,\n        }).then((response) => {\n            console.log(changeTime(response.data.expirationTime));\n            if (response.status == 200 && Cookies.get('auth') === undefined) {\n            this.setCookie('auth',response.data.token, changeTime(response.data.expirationTime));\n            }\n          });\n          \n        console.log(response);\n        this.isAuthenticated = true;\n        this.$router.push('/home');\n      } catch (error) {\n        this.isLogin = false;\n        console.error('Login failed', error.response.data);\n      }\n    },\n\n    setCookie(name, value, seconds) {\n      const date = new Date();\n      date.setTime(date.getTime() + (seconds * 1000));\n      const expires = \"expires=\" + date.toUTCString();\n      document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";\n    },\n\n    deleteCookie(name) {\n      document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n    },\n    changeTime(timeString){\n      // Tạo đối tượng Date từ chuỗi thời gian\n      const dateObject = new Date(timeString);\n      // Chuyển đổi thời gian thành giây\n      const timeInSeconds = dateObject.getTime() / 1000;\n\nconsole.log(timeInSeconds);\n    }\n  },\n};\n</script>\n"],"mappings":";AAkCA,OAAO,mCAAmC;AAC1C,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,OAAM,MAAO,WAAW;AAC/B,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,aAAY,QAAS,+BAA+B;AAG7D,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIH,SAAS,CAAC,CAAC;IAE1B,IAAID,OAAO,CAACK,GAAG,CAAC,MAAM,MAAMC,SAAS,EAAE;MACrCF,MAAM,CAACG,IAAI,CAAC,OAAO,CAAC;IACtB;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IAEX,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF;QACA,MAAMC,SAAQ,GAAIZ,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAACa,GAAG;QACpD,MAAMC,QAAO,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAACH,SAAS,EAAE;UAC3CL,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC,CAACQ,IAAI,CAAEF,QAAQ,IAAK;UAClBG,OAAO,CAACC,GAAG,CAACC,UAAU,CAACL,QAAQ,CAACR,IAAI,CAACc,cAAc,CAAC,CAAC;UACrD,IAAIN,QAAQ,CAACO,MAAK,IAAK,GAAE,IAAKvB,OAAO,CAACK,GAAG,CAAC,MAAM,MAAMC,SAAS,EAAE;YACjE,IAAI,CAACkB,SAAS,CAAC,MAAM,EAACR,QAAQ,CAACR,IAAI,CAACiB,KAAK,EAAEJ,UAAU,CAACL,QAAQ,CAACR,IAAI,CAACc,cAAc,CAAC,CAAC;UACpF;QACF,CAAC,CAAC;QAEJH,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QACrB,IAAI,CAACU,eAAc,GAAI,IAAI;QAC3B,IAAI,CAACC,OAAO,CAACpB,IAAI,CAAC,OAAO,CAAC;MAC5B,EAAE,OAAOqB,KAAK,EAAE;QACd,IAAI,CAACjB,OAAM,GAAI,KAAK;QACpBQ,OAAO,CAACS,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACZ,QAAQ,CAACR,IAAI,CAAC;MACpD;IACF,CAAC;IAEDgB,SAASA,CAACK,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAE;MAC9B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC;MACvBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,CAAC,IAAKJ,OAAM,GAAI,IAAK,CAAC;MAC/C,MAAMK,OAAM,GAAI,UAAS,GAAIJ,IAAI,CAACK,WAAW,CAAC,CAAC;MAC/CC,QAAQ,CAACC,MAAK,GAAIV,IAAG,GAAI,GAAE,GAAIC,KAAI,GAAI,GAAE,GAAIM,OAAM,GAAI,SAAS;IAClE,CAAC;IAEDI,YAAYA,CAACX,IAAI,EAAE;MACjBS,QAAQ,CAACC,MAAK,GAAK,GAAEV,IAAK,mDAAkD;IAC9E,CAAC;IACDR,UAAUA,CAACoB,UAAU,EAAC;MACpB;MACA,MAAMC,UAAS,GAAI,IAAIT,IAAI,CAACQ,UAAU,CAAC;MACvC;MACA,MAAME,aAAY,GAAID,UAAU,CAACP,OAAO,CAAC,IAAI,IAAI;MAEvDhB,OAAO,CAACC,GAAG,CAACuB,aAAa,CAAC;IACtB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}