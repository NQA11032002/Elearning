{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"../../assets/styles/login.scss\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nexport default {\n  setup() {\n    if (Cookies.get('auth') != undefined) {\n      this.$router.push('/home');\n    }\n  },\n  data() {\n    return {\n      userName: '',\n      password: '',\n      isLogin: false\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        // Gửi yêu cầu POST đến API Spring Boot để đăng nhập\n        const response = await axios.post('http://localhost:8087/auth/login', {\n          userName: this.userName,\n          password: this.password\n        });\n\n        // Xử lý dữ liệu nhận được từ API (response.data) nếu cần\n        console.log('Login successful', response);\n        if (response.status == 200 && Cookies.get('auth') === undefined) {\n          Cookies.set('auth', response.data.token, {\n            expires: 1\n          }); // Expires in 7 days\n        }\n\n        // Hiển thị thông báo và chuyển hướng sau khi đăng nhập thành công\n        alert('Login successful');\n        this.$router.push('/home'); // Chuyển hướng đến trang home\n      } catch (error) {\n        // Xử lý lỗi từ API (error.response.data) nếu cần\n        console.error('Login failed', error.response.data);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Cookies","setup","get","undefined","$router","push","data","userName","password","isLogin","methods","login","response","post","console","log","status","set","token","expires","alert","error"],"sources":["C:\\Users\\hoqua\\Desktop\\Code\\PMChuyenNghiep\\Project-Elearning\\Elearning\\src\\components\\client\\LoginScreen.vue"],"sourcesContent":["<template>\n    <body class=\"LoginForm\">\n        <div class=\"LoginForm_container\" id=\"container\">\n            <div class=\"form-container log-in-container\">\n                <form @submit.prevent=\"login\">\n                    <h1>Login</h1>\n                    <div class=\"social-container\">\n                        <a href=\"#\" class=\"social\"><i class=\"icon-fb fa-brands fa-facebook\"></i></a>\n                        <a href=\"#\" class=\"social\"><i class=\"icon-git fa-brands fa-github\"></i></a>\n                    </div>\n                    <span>or use your account</span>\n                    <input v-model=\"userName\" type=\"text\" placeholder=\"Username\" />\n                    <input v-model=\"password\" type=\"password\" placeholder=\"Password\" />\n                    <p class=\"text-red-500 font-semibold py-2 text-sm\">Tài khoản hoặc mật khẩu không chính xác</p>\n                    <a href=\"#\">Forgot your password?</a>\n                    <button type=\"submit\">Log In</button>\n                </form>\n            </div>\n            <div class=\"overlay-container\">\n                <div class=\"overlay\">\n                    <div class=\"overlay-panel overlay-right\">\n                        <h1>Login Form</h1>\n                        <p>Welcome to our website! Enjoy your time</p>\n                        <router-link to=\"/register\">\n                            <button>No account yet? Register</button>\n                        </router-link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </body>\n</template>\n\n<script>\nimport \"../../assets/styles/login.scss\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nexport default {\n    setup(){\n        if(Cookies.get('auth') != undefined){\n            this.$router.push('/home'); \n        }\n    },\n    data() {\n        return {\n            userName: '',\n            password: '',\n            isLogin: false,\n            \n        };\n    },\n    methods: {\n\n        async login() {\n            try {\n                // Gửi yêu cầu POST đến API Spring Boot để đăng nhập\n                const response = await axios.post('http://localhost:8087/auth/login', {\n                    userName: this.userName,\n                    password: this.password,\n                });\n\n                // Xử lý dữ liệu nhận được từ API (response.data) nếu cần\n                console.log('Login successful', response);\n\n                if(response.status == 200 && Cookies.get('auth') === undefined){\n                    Cookies.set('auth', response.data.token, { expires: 1 }); // Expires in 7 days\n                }\n\n                // Hiển thị thông báo và chuyển hướng sau khi đăng nhập thành công\n                alert('Login successful');\n                this.$router.push('/home'); // Chuyển hướng đến trang home\n            } catch (error) {\n                // Xử lý lỗi từ API (error.response.data) nếu cần\n                console.error('Login failed', error.response.data);\n            }\n        },\n    },\n};\n</script>\n"],"mappings":";AAkCA,OAAO,gCAAgC;AACvC,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,OAAM,MAAO,WAAW;AAE/B,eAAe;EACXC,KAAKA,CAAA,EAAE;IACH,IAAGD,OAAO,CAACE,GAAG,CAAC,MAAM,KAAKC,SAAS,EAAC;MAChC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;IAC9B;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IAEb,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IAEL,MAAMC,KAAKA,CAAA,EAAG;MACV,IAAI;QACA;QACA,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,kCAAkC,EAAE;UAClEN,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACnB,CAAC,CAAC;;QAEF;QACAM,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAAC;QAEzC,IAAGA,QAAQ,CAACI,MAAK,IAAK,GAAE,IAAKhB,OAAO,CAACE,GAAG,CAAC,MAAM,MAAMC,SAAS,EAAC;UAC3DH,OAAO,CAACiB,GAAG,CAAC,MAAM,EAAEL,QAAQ,CAACN,IAAI,CAACY,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAE,CAAC,CAAC,EAAE;QAC9D;;QAEA;QACAC,KAAK,CAAC,kBAAkB,CAAC;QACzB,IAAI,CAAChB,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC,EAAE;MAChC,EAAE,OAAOgB,KAAK,EAAE;QACZ;QACAP,OAAO,CAACO,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACT,QAAQ,CAACN,IAAI,CAAC;MACtD;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}