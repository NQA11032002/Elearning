{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userName: '',\n      fullName: '',\n      phone: '',\n      password: '',\n      repeatPassword: ''\n    };\n  },\n  methods: {\n    async register() {\n      // Kiểm tra xem mật khẩu có trùng khớp không\n      if (this.password !== this.repeatPassword) {\n        alert('Passwords do not match');\n        return;\n      }\n      try {\n        // Gửi yêu cầu POST đến API Spring Boot để đăng ký\n        const response = await axios.post('http://localhost:8087/auth/register', {\n          userName: this.userName,\n          password: this.password,\n          fullName: this.fullName,\n          phone: this.phone\n        });\n\n        // Xử lý dữ liệu nhận được từ API (response.data) nếu cần\n        console.log('Registration successful', response.data);\n\n        // Hiển thị thông báo và chuyển hướng sau khi đăng ký thành công\n        alert('Registration successful');\n        this.$router.push('/login'); // Chuyển hướng đến trang login\n      } catch (error) {\n        // Xử lý lỗi từ API (error.response.data) nếu cần\n        console.error('Registration failed', error.response.data);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userName","fullName","phone","password","repeatPassword","methods","register","alert","response","post","console","log","$router","push","error"],"sources":["C:\\Users\\hoqua\\Desktop\\Code\\PMChuyenNghiep\\Project-Elearning\\Elearning\\src\\components\\client\\RegisterScreen.vue"],"sourcesContent":["<template>\n    <body class=\"LoginForm\">\n        <div class=\"LoginForm_container\" id=\"container\">\n            <div class=\"form-container log-in-container\">\n                <form @submit.prevent=\"register\">\n                    <h1>Create Account</h1>\n                    <span>Create your new account</span>\n                    <input v-model=\"userName\" type=\"text\" placeholder=\"Username\" />\n                    <input v-model=\"fullName\" type=\"text\" placeholder=\"Full name\" />\n                    <input v-model=\"phone\" type=\"text\" placeholder=\"Phone number\" />\n                    <input v-model=\"password\" type=\"password\" placeholder=\"Password\" />\n                    <input v-model=\"repeatPassword\" type=\"password\" placeholder=\"Repeat your password\" />\n                    <p v-if=\"password !== repeatPassword\" class=\"text-red-600 font-bold py-2 text-sm\">Mật khẩu nhập lại không chính xác!</p>\n                    <button type=\"submit\">Register</button>\n                </form>\n            </div>\n            <div class=\"overlay-container\">\n                <div class=\"overlay\">\n                    <div class=\"overlay-panel overlay-right\">\n                        <h1>Register Form</h1>\n                        <p>Have already an account? Login now!</p>\n                        <a href=\"/login\">\n                            <button>Login</button>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </body>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            userName: '',\n            fullName: '',\n            phone: '',\n            password: '',\n            repeatPassword: '',\n        };\n    },\n    methods: {\n        async register() {\n            // Kiểm tra xem mật khẩu có trùng khớp không\n            if (this.password !== this.repeatPassword) {\n                alert('Passwords do not match');\n                return;\n            }\n\n            try {\n                // Gửi yêu cầu POST đến API Spring Boot để đăng ký\n                const response = await axios.post('http://localhost:8087/auth/register', {\n                    userName: this.userName,\n                    password: this.password,\n                    fullName: this.fullName,\n                    phone: this.phone,\n                });\n\n                // Xử lý dữ liệu nhận được từ API (response.data) nếu cần\n                console.log('Registration successful', response.data);\n\n                // Hiển thị thông báo và chuyển hướng sau khi đăng ký thành công\n                alert('Registration successful');\n                this.$router.push('/login'); // Chuyển hướng đến trang login\n            } catch (error) {\n                // Xử lý lỗi từ API (error.response.data) nếu cần\n                console.error('Registration failed', error.response.data);\n            }\n        },\n    },\n};\n</script>\n"],"mappings":";AAgCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE;IACpB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,QAAQA,CAAA,EAAG;MACb;MACA,IAAI,IAAI,CAACH,QAAO,KAAM,IAAI,CAACC,cAAc,EAAE;QACvCG,KAAK,CAAC,wBAAwB,CAAC;QAC/B;MACJ;MAEA,IAAI;QACA;QACA,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,qCAAqC,EAAE;UACrET,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBG,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBF,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA;QAChB,CAAC,CAAC;;QAEF;QACAQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,QAAQ,CAACT,IAAI,CAAC;;QAErD;QACAQ,KAAK,CAAC,yBAAyB,CAAC;QAChC,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;MACjC,EAAE,OAAOC,KAAK,EAAE;QACZ;QACAJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACN,QAAQ,CAACT,IAAI,CAAC;MAC7D;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}